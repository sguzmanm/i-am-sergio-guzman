buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$ktor_shadow_version"
    }
}


apply plugin: 'kotlin'
apply plugin: 'application'

// Fat jar packaging from https://ktor.io/servers/deploy/packing/fatjar.html
mainClassName = "io.ktor.server.netty.EngineMain"
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.sguzmanm'

// This task will generate your fat JAR and put it in the ./build/libs/ directory
shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

configure([compileKotlin, compileTestKotlin]) {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Dotenv
    implementation "io.github.cdimascio:java-dotenv:$dotenv_version"

    // Google calendar
    compile "com.google.api-client:google-api-client:$google_calendar_version"
    compile "com.google.oauth-client:google-oauth-client-jetty:$google_calendar_version"
    compile "com.google.apis:google-api-services-calendar:v3-rev305-$google_calendar_version"

    // Ktor Server
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    // Ktor client
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation("io.ktor:ktor-client-cio:$ktor_version")
    implementation("io.ktor:ktor-client-json:$ktor_version")
    implementation("io.ktor:ktor-client-gson:$ktor_version")
    implementation("io.ktor:ktor-client-auth:$ktor_version")


    // KMongo
    compile "org.litote.kmongo:kmongo-coroutine:$kmongo_version"

}
